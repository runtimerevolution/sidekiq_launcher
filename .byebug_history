c
valid_paths
c
valid_paths
c
subject.job_paths.count
c
valid_paths.concat(invalid_paths)
quit
subject.job_paths.count
subject.job_paths
c
subject.job_paths
subject.job_paths=valid_paths.first
subject.job_paths
subject.job_paths=invalid_paths.first
subject.job_paths
subject.job_paths=valid_paths.first
valid_paths.first
base_path
quit
QUIT
File.dirname(__FILE__)
quit
Rails.root.join()
subject.job_paths
subject.job_paths=File.dirname __FILE__
subject.job_paths
subject.job_paths=File.basename(Dir.getwd) 
File.basename(Dir.getwd) 
subject.job_paths
subject.job_paths=base_path
subject.job_paths="lkjh"
subject.job_paths
subject.job_paths="lkjh"
subject.class
subject
c
job_paths=["cenas"]
quit
subject.job_paths
quit
subject.job_paths
quit
subject.job_paths
quit
subject.job_paths
subject.job_paths([])
subject.job_paths=[]
subject.job_paths=invalid_paths.first
subject.job_paths=base_path
quit
subject.job_paths=base_path
quit
subject.job_paths=base_path
quit
subject.job_paths=base_path
quit
subject.job_paths=base_path
base_path
quit
base_path
subject.job_paths=base_path
c!
c"
subject.job_paths="cenas"
File.basename(Dir.getwd).class
File.expand_path(File.dirname(File.dirname(__FILE__))).is_a?(Pathname)
File.expand_path(File.dirname(File.dirname(__FILE__))).join('app')
File.expand_path(File.dirname(File.dirname(__FILE__))).join('app'))
[nil]
File.expand_path(File.dirname(File.dirname(__FILE__)))
File.basename(Dir.getwd)
__dir__
aa = File.directory?(path)
File.directory?('/')
Rails.root.join('app', 'sidekiq')
c!
c
["a"].include?("a")
["a"].include?("asd")
"asd".include?(["a"])
"asd".in?(["a"])
str.in?(["a"])
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
str
c
c!
c
str
c
str
c
c\
c
SidekiqLauncher::JobLoader.reset_jobs
SidekiqLauncher::JobLoader.reload_jobs
SidekiqLauncher::JobLoader.reset_jobs
SidekiqLauncher::JobLoader.jobs
require_relative 'test/dummy/app/sidekiq/lots_of_args_job'
SidekiqLauncher::JobLoader.jobs
SidekiqLauncher::JobLoader
SidekiqLauncher::JobLoader.jobs
require_relative 'lib/classes/job_loader'
SidekiqLauncher::JobLoader.jobs
require_relative 'lib/sidekiq_launcher'
c
SidekiqLauncher::JobLoader.jobs
require_relative 'lib/sidekiq_launcher'
require 'rails'
require_relative 'lib/sidekiq_launcher'
require 'configuration'
SidekiqLauncher::JobLoader.jobs
SidekiqLauncher::JobLoader
require_relative 'lib/classes/job_loader'
require_relative 'classes/job_loader'
require_relative 'classes/sidekiq_loader'
require_relative 'sidekiq_loader'
SidekiqLauncher::JobLoader
c
LotsOfArgsJob.new
LotsOfArgsJob
c
require_relative 'test/dummy/app/sidekiq/lots_of_args_job'
require 'sidekiq'
require_relative 'test/dummy/app/sidekiq/lots_of_args_job'
require_relative '/test/dummy/app/sidekiq/lots_of_args_job'
require_relative '../test/dummy/app/sidekiq/lots_of_args_job'
require_relative '../../test/dummy/app/sidekiq/lots_of_args_job'
require 'test/dummy/app/sidekiq/lots_of_args_job'
LotsOfArgsJob
c
described_class
c
described_class
